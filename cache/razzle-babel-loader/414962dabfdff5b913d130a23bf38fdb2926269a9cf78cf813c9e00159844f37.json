{"ast":null,"code":"var __jsx = React.createElement;\nimport express from \"express\";\nimport cors from \"cors\";\nimport bodyParser from \"body-parser\";\nimport diagnose from \"./api/diagnose\";\nimport { renderToString } from \"react-dom/server\";\nimport { StaticRouter } from \"react-router-dom/server\";\nimport App from \"./App\";\nimport React from \"react\";\nconst assets = require(process.env.RAZZLE_ASSETS_MANIFEST);\nconst cssLinksFromAssets = (assets, entrypoint) => assets[entrypoint] ? assets[entrypoint].css ? assets[entrypoint].css.map(asset => `<link rel=\"stylesheet\" href=\"${asset}\">`).join('') : '' : '';\n\n// eslint-disable-next-line no-shadow\nconst jsScriptTagsFromAssets = (assets, entrypoint, ...extra) => assets[entrypoint] ? assets[entrypoint].js ? assets[entrypoint].js.map(asset => `<script src=\"${asset}\" ${extra.join(' ')}></script>`).join('') : '' : '';\nconst renderApp = (req, res) => {\n  const context = {};\n  const markup = renderToString(__jsx(StaticRouter, {\n    context: context,\n    location: req.url\n  }, __jsx(App, null)));\n  const html = `<!doctype html>\n  <html lang=\"\">\n  <head>\n      <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n      <meta charset=\"utf-8\" />\n      <title>Emoident - Thang đo cảm xúc</title>\n      <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n      <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\"/>\n      <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin/>\n      <link href=\"https://fonts.googleapis.com/css2?family=Inter&display=swap\" rel=\"stylesheet\"/>\n            ${cssLinksFromAssets(assets, 'client')}\n\n  </head>\n  <body>\n      <div id=\"root\">${markup}</div>\n            ${jsScriptTagsFromAssets(assets, 'client', 'defer', 'crossorigin')}\n\n  </body>\n</html>`;\n  return {\n    context,\n    html\n  };\n};\nconst server = express();\nserver.use(cors('*')).disable('x-powered-by').use(bodyParser.json({\n  limit: '5mb'\n})).use(bodyParser.urlencoded({\n  extended: true\n})).use('/api', diagnose).get('/*', (req, res, next) => {\n  try {\n    const {\n      context,\n      html\n    } = renderApp(req, res);\n    if (context.url) {\n      res.redirect(context.url);\n    } else {\n      res.status(context.statusCode || 200).send(html);\n    }\n  } catch (error) {\n    next(error);\n  }\n});\nexport default server;","map":{"version":3,"names":["express","cors","bodyParser","diagnose","renderToString","StaticRouter","App","React","assets","require","process","env","RAZZLE_ASSETS_MANIFEST","cssLinksFromAssets","entrypoint","css","map","asset","join","jsScriptTagsFromAssets","extra","js","renderApp","req","res","context","markup","__jsx","location","url","html","server","use","disable","json","limit","urlencoded","extended","get","next","redirect","status","statusCode","send","error"],"sources":["D:/LAPTRINH/emoident/src/server.js"],"sourcesContent":["import express from \"express\";\r\nimport cors from \"cors\";\r\nimport bodyParser from \"body-parser\";\r\nimport diagnose from \"./api/diagnose\";\r\nimport {renderToString} from \"react-dom/server\";\r\nimport {StaticRouter} from \"react-router-dom/server\";\r\nimport App from \"./App\";\r\nimport React from \"react\";\r\n\r\nconst assets = require(process.env.RAZZLE_ASSETS_MANIFEST);\r\n\r\nconst cssLinksFromAssets = (assets, entrypoint) =>\r\n    assets[entrypoint]\r\n        ? assets[entrypoint].css\r\n            ? assets[entrypoint].css\r\n                .map((asset) => `<link rel=\"stylesheet\" href=\"${asset}\">`)\r\n                .join('')\r\n            : ''\r\n        : '';\r\n\r\n// eslint-disable-next-line no-shadow\r\nconst jsScriptTagsFromAssets = (assets, entrypoint, ...extra) =>\r\n    assets[entrypoint]\r\n        ? assets[entrypoint].js\r\n            ? assets[entrypoint].js\r\n                .map((asset) => `<script src=\"${asset}\" ${extra.join(' ')}></script>`)\r\n                .join('')\r\n            : ''\r\n        : '';\r\n\r\nconst renderApp = (req, res) => {\r\n    const context = {};\r\n    const markup = renderToString(\r\n        <StaticRouter context={context} location={req.url}>\r\n            <App />\r\n        </StaticRouter>\r\n    );\r\n    const html = `<!doctype html>\r\n  <html lang=\"\">\r\n  <head>\r\n      <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\r\n      <meta charset=\"utf-8\" />\r\n      <title>Emoident - Thang đo cảm xúc</title>\r\n      <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n      <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\"/>\r\n      <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin/>\r\n      <link href=\"https://fonts.googleapis.com/css2?family=Inter&display=swap\" rel=\"stylesheet\"/>\r\n            ${cssLinksFromAssets(assets, 'client')}\r\n\r\n  </head>\r\n  <body>\r\n      <div id=\"root\">${markup}</div>\r\n            ${jsScriptTagsFromAssets(assets, 'client', 'defer', 'crossorigin')}\r\n\r\n  </body>\r\n</html>`;\r\n    return { context, html };\r\n};\r\n\r\n\r\n\r\nconst server = express();\r\nserver\r\n    .use(cors('*'))\r\n    .disable('x-powered-by')\r\n    .use(bodyParser.json({ limit: '5mb' }))\r\n    .use(bodyParser.urlencoded({ extended: true }))\r\n    .use('/api', diagnose)\r\n    .get('/*',  (req, res, next) => {\r\n        try {\r\n            const { context, html } = renderApp(req, res);\r\n            if (context.url) {\r\n                res.redirect(context.url);\r\n            } else {\r\n                res.status(context.statusCode || 200).send(html);\r\n            }\r\n        } catch (error) {\r\n            next(error);\r\n        }\r\n});\r\n\r\n\r\nexport default server;\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}