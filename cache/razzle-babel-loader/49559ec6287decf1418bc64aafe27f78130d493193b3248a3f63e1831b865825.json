{"ast":null,"code":"var _jsxFileName = \"D:\\\\LAPTRINH\\\\emoident\\\\src\\\\component\\\\EmotionAnalyzer.js\";\nvar __jsx = React.createElement;\n// EmotionAnalyzer.js\nimport React, { useState } from \"react\";\nimport { TextField, Button, LinearProgress, Typography } from \"@mui/material\";\nimport axios from \"axios\";\nfunction EmotionAnalyzer() {\n  const {\n    0: text,\n    1: setText\n  } = useState(\"\");\n  const {\n    0: emotionScore,\n    1: setEmotionScore\n  } = useState(null);\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  const handleTextChange = e => {\n    setText(e.target.value);\n  };\n  const handleSubmit = async () => {\n    try {\n      setLoading(true);\n      const response = await axios.post(\"http://localhost:3000/api/diagnose\", {\n        text\n      });\n      const {\n        score,\n        label\n      } = response.data.data;\n      if (+label === 0) {\n        setEmotionScore(1 - score);\n      } else {\n        setEmotionScore(score);\n      }\n    } catch (error) {\n      console.error(\"Error submitting text:\", error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return __jsx(\"div\", {\n    style: {\n      textAlign: \"center\",\n      marginTop: \"50px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, __jsx(Typography, {\n    variant: \"h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, \"H\\xE3y m\\xF4 t\\u1EA3 c\\u1EA3m x\\xFAc c\\u1EE7a b\\u1EA1n\"), __jsx(TextField, {\n    multiline: true,\n    rows: 4,\n    variant: \"outlined\",\n    fullWidth: true,\n    margin: \"normal\",\n    onChange: handleTextChange,\n    value: text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }), __jsx(Button, {\n    variant: \"contained\",\n    onClick: handleSubmit,\n    disabled: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, loading ? \"Đang xử lý...\" : \"Submit\"), emotionScore !== null && __jsx(\"div\", {\n    style: {\n      marginTop: \"20px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }\n  }, __jsx(Typography, {\n    variant: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 21\n    }\n  }, \"M\\u1EE9c \\u0111\\u1ED9 c\\u1EA3m x\\xFAc: \", emotionScore), __jsx(LinearProgress, {\n    variant: \"determinate\",\n    value: emotionScore * 100,\n    sx: {\n      marginTop: \"10px\",\n      height: \"10px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 21\n    }\n  })));\n}\n;\nexport default EmotionAnalyzer;","map":{"version":3,"names":["React","useState","TextField","Button","LinearProgress","Typography","axios","EmotionAnalyzer","text","setText","emotionScore","setEmotionScore","loading","setLoading","handleTextChange","e","target","value","handleSubmit","response","post","score","label","data","error","console","__jsx","style","textAlign","marginTop","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","variant","multiline","rows","fullWidth","margin","onChange","onClick","disabled","sx","height"],"sources":["D:/LAPTRINH/emoident/src/component/EmotionAnalyzer.js"],"sourcesContent":["// EmotionAnalyzer.js\r\nimport React, { useState } from \"react\";\r\nimport { TextField, Button, LinearProgress, Typography } from \"@mui/material\";\r\nimport axios from \"axios\";\r\n\r\nfunction EmotionAnalyzer() {\r\n    const [text, setText] = useState(\"\");\r\n    const [emotionScore, setEmotionScore] = useState(null);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const handleTextChange = (e) => {\r\n        setText(e.target.value);\r\n    };\r\n\r\n    const handleSubmit = async () => {\r\n        try {\r\n            setLoading(true);\r\n            const response = await axios.post(\"http://localhost:3000/api/diagnose\", {text});\r\n            const {score, label} = response.data.data;\r\n            if(+label === 0) {\r\n                setEmotionScore(1 - score);\r\n\r\n            } else {\r\n                setEmotionScore(score);\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Error submitting text:\", error);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div style={{ textAlign: \"center\", marginTop: \"50px\" }}>\r\n            <Typography variant=\"h5\">Hãy mô tả cảm xúc của bạn</Typography>\r\n            <TextField\r\n                multiline\r\n                rows={4}\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                margin=\"normal\"\r\n                onChange={handleTextChange}\r\n                value={text}\r\n            />\r\n            <Button variant=\"contained\" onClick={handleSubmit} disabled={loading}>\r\n                {loading ? \"Đang xử lý...\" : \"Submit\"}\r\n            </Button>\r\n            {emotionScore !== null && (\r\n                <div style={{ marginTop: \"20px\" }}>\r\n                    <Typography variant=\"h6\">Mức độ cảm xúc: {emotionScore}</Typography>\r\n                    <LinearProgress\r\n                        variant=\"determinate\"\r\n                        value={emotionScore * 100}\r\n                        sx={{ marginTop: \"10px\", height: \"10px\" }}\r\n                    />\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default EmotionAnalyzer;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}