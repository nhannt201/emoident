{"ast":null,"code":"var _jsxFileName = \"D:\\\\LAPTRINH\\\\emoident\\\\src\\\\component\\\\EmotionAnalyzer.js\";\nvar __jsx = React.createElement;\nimport 'regenerator-runtime/runtime';\nimport React, { useState } from \"react\";\nimport { TextField, Button, LinearProgress, Typography, Box } from \"@mui/material\";\nimport axios from \"axios\";\nimport SpeechRecognition, { useSpeechRecognition } from 'react-speech-recognition';\nfunction EmotionAnalyzer() {\n  const {\n    0: text,\n    1: setText\n  } = useState(\"\");\n  const {\n    0: emotionScore,\n    1: setEmotionScore\n  } = useState(null);\n  const {\n    0: emotionLabel,\n    1: setEmotionLabel\n  } = useState(\"Tốt\");\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  const {\n    0: color,\n    1: setColor\n  } = useState('blue');\n  const handleTextChange = e => {\n    setText(e.target.value);\n  };\n  const handleSubmit = async () => {\n    try {\n      setLoading(true);\n      const response = await axios.post(\"/api/diagnose\", {\n        text\n      });\n      const {\n        score,\n        label\n      } = response.data.data;\n      const isBadState = +label === 0;\n      const emotionLabel = isBadState ? \"Tệ\" : \"Tốt\";\n      setEmotionLabel(emotionLabel);\n      setEmotionScore(score);\n      if (isBadState) {\n        if (score > 0.75) {\n          setColor('#f84a00');\n        } else {\n          setColor('#ef9479');\n        }\n      } else {\n        if (score > 0.75) {\n          setColor('#008000');\n        } else {\n          setColor('#a3ad09');\n        }\n      }\n    } catch (error) {\n      console.error(\"Không thể phân tích nội dung yêu cầu:\", error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const {\n    transcript,\n    listening,\n    resetTranscript\n  } = useSpeechRecognition({\n    language: 'vi-VN'\n  });\n  React.useEffect(() => {\n    setText(transcript);\n  }, [transcript]);\n  const startListening = function () {\n    resetTranscript();\n    SpeechRecognition.startListening({\n      continuous: true\n    });\n  };\n  const {\n    0: language,\n    1: setLanguage\n  } = useState('en-US');\n  React.useEffect(() => {\n    setLanguage(navigator.language);\n  }, []);\n  const isSupportVNs = language === 'vi-VN';\n  return __jsx(Box, {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    sx: {\n      width: '80%',\n      position: 'absolute',\n      top: '20%',\n      left: '50%',\n      transform: 'translate(-50%, -50%)'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, __jsx(Typography, {\n    variant: \"h4\",\n    sx: {\n      marginBottom: '20px',\n      fontWeight: 'bold'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }, \"T\\xEAn S\\u1EA3n Ph\\u1EA9m\"), __jsx(Typography, {\n    variant: \"subtitle1\",\n    sx: {\n      marginBottom: '20px',\n      color: 'grey'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }, \"C\\xE2u Slogan c\\u1EE7a B\\u1EA1n\"), __jsx(TextField, {\n    multiline: true,\n    rows: 4,\n    variant: \"outlined\",\n    fullWidth: true,\n    margin: \"normal\",\n    placeholder: \"H\\xE3y m\\xF4 t\\u1EA3 c\\u1EA3m x\\xFAc c\\u1EE7a b\\u1EA1n\",\n    onChange: handleTextChange,\n    value: text,\n    inputProps: {\n      maxLength: 5000\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }), __jsx(Box, {\n    display: \"flex\",\n    justifyContent: \"center\",\n    sx: {\n      marginBottom: '20px',\n      marginTop: '10px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }\n  }, __jsx(Button, {\n    variant: \"contained\",\n    onClick: listening ? SpeechRecognition.stopListening : startListening,\n    disabled: !isSupportVNs,\n    sx: {\n      marginRight: '20px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 17\n    }\n  }, listening ? 'Dừng nói' : 'Nói để điền nội dung'), __jsx(Button, {\n    variant: \"contained\",\n    onClick: handleSubmit,\n    disabled: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 17\n    }\n  }, loading ? 'Đang xử lý...' : 'Phân tích')), emotionScore !== null && __jsx(Box, {\n    sx: {\n      width: '100%',\n      textAlign: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 17\n    }\n  }, __jsx(Typography, {\n    variant: \"h6\",\n    sx: {\n      marginTop: '20px',\n      fontWeight: 'bold'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 21\n    }\n  }, \"M\\u1EE9c \\u0111\\u1ED9 c\\u1EA3m x\\xFAc: \", emotionLabel, \" - \", Math.round(emotionScore * 100), \"%\"), __jsx(LinearProgress, {\n    variant: \"determinate\",\n    value: emotionScore * 100,\n    sx: {\n      marginTop: '10px',\n      height: '10px',\n      '& .MuiLinearProgress-bar': {\n        backgroundColor: color\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 21\n    }\n  })));\n}\n;\nexport default EmotionAnalyzer;","map":{"version":3,"names":["React","useState","TextField","Button","LinearProgress","Typography","Box","axios","SpeechRecognition","useSpeechRecognition","EmotionAnalyzer","text","setText","emotionScore","setEmotionScore","emotionLabel","setEmotionLabel","loading","setLoading","color","setColor","handleTextChange","e","target","value","handleSubmit","response","post","score","label","data","isBadState","error","console","transcript","listening","resetTranscript","language","useEffect","startListening","continuous","setLanguage","navigator","isSupportVNs","__jsx","display","flexDirection","justifyContent","alignItems","sx","width","position","top","left","transform","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","variant","marginBottom","fontWeight","multiline","rows","fullWidth","margin","placeholder","onChange","inputProps","maxLength","marginTop","onClick","stopListening","disabled","marginRight","textAlign","Math","round","height","backgroundColor"],"sources":["D:/LAPTRINH/emoident/src/component/EmotionAnalyzer.js"],"sourcesContent":["import 'regenerator-runtime/runtime'\r\nimport React, { useState } from \"react\";\r\nimport {TextField, Button, LinearProgress, Typography, Box} from \"@mui/material\";\r\nimport axios from \"axios\";\r\nimport SpeechRecognition, { useSpeechRecognition } from 'react-speech-recognition';\r\n\r\nfunction EmotionAnalyzer() {\r\n    const [text, setText] = useState(\"\");\r\n    const [emotionScore, setEmotionScore] = useState(null);\r\n    const [emotionLabel, setEmotionLabel] = useState(\"Tốt\");\r\n    const [loading, setLoading] = useState(false);\r\n    const [color, setColor] = useState('blue')\r\n\r\n    const handleTextChange = (e) => {\r\n        setText(e.target.value);\r\n    };\r\n\r\n    const handleSubmit = async () => {\r\n        try {\r\n            setLoading(true);\r\n            const response = await axios.post(\"/api/diagnose\", {text});\r\n            const {score, label} = response.data.data;\r\n            const isBadState = +label === 0;\r\n            const emotionLabel = isBadState ? \"Tệ\" : \"Tốt\"\r\n            setEmotionLabel(emotionLabel)\r\n            setEmotionScore(score);\r\n\r\n            if(isBadState) {\r\n                if(score > 0.75) {\r\n                    setColor('#f84a00')\r\n                } else {\r\n                    setColor('#ef9479')\r\n                }\r\n            } else {\r\n                if(score > 0.75) {\r\n                    setColor('#008000')\r\n                } else {\r\n                    setColor('#a3ad09')\r\n\r\n                }\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Không thể phân tích nội dung yêu cầu:\", error);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n\r\n    const { transcript, listening, resetTranscript } = useSpeechRecognition({language: 'vi-VN'});\r\n\r\n    React.useEffect(() => {\r\n        setText(transcript);\r\n    }, [transcript]);\r\n\r\n    const startListening = function () {\r\n        resetTranscript();\r\n        SpeechRecognition.startListening({continuous: true})\r\n    };\r\n\r\n\r\n    const [language, setLanguage] = useState('en-US')\r\n    React.useEffect(() => {\r\n        setLanguage(navigator.language)\r\n    }, [])\r\n    const isSupportVNs = language === 'vi-VN';\r\n\r\n    return (\r\n        <Box\r\n            display=\"flex\"\r\n            flexDirection=\"column\"\r\n            justifyContent=\"center\"\r\n            alignItems=\"center\"\r\n            sx={{\r\n                width: '80%',\r\n                position: 'absolute',\r\n                top: '20%',\r\n                left: '50%',\r\n                transform: 'translate(-50%, -50%)',\r\n            }}\r\n        >\r\n            <Typography variant=\"h4\" sx={{ marginBottom: '20px', fontWeight: 'bold' }}>\r\n                Tên Sản Phẩm\r\n            </Typography>\r\n            <Typography variant=\"subtitle1\" sx={{ marginBottom: '20px', color: 'grey' }}>\r\n                Câu Slogan của Bạn\r\n            </Typography>\r\n            <TextField\r\n                multiline\r\n                rows={4}\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                margin=\"normal\"\r\n                placeholder=\"Hãy mô tả cảm xúc của bạn\"\r\n                onChange={handleTextChange}\r\n                value={text}\r\n                inputProps={{\r\n                    maxLength: 5000,\r\n                }}\r\n            />\r\n            <Box display=\"flex\" justifyContent=\"center\" sx={{ marginBottom: '20px', marginTop: '10px' }}>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    onClick={listening ? SpeechRecognition.stopListening : startListening}\r\n                    disabled={!isSupportVNs}\r\n                    sx={{ marginRight: '20px' }}\r\n                >\r\n                    {listening ? 'Dừng nói' : 'Nói để điền nội dung'}\r\n                </Button>\r\n                <Button variant=\"contained\" onClick={handleSubmit} disabled={loading}>\r\n                    {loading ? 'Đang xử lý...' : 'Phân tích'}\r\n                </Button>\r\n            </Box>\r\n\r\n            {emotionScore !== null && (\r\n                <Box sx={{ width: '100%', textAlign: 'center' }}>\r\n                    <Typography variant=\"h6\" sx={{ marginTop: '20px', fontWeight: 'bold' }}>\r\n                        Mức độ cảm xúc: {emotionLabel} - {Math.round(emotionScore * 100)}%\r\n                    </Typography>\r\n                    <LinearProgress\r\n                        variant=\"determinate\"\r\n                        value={emotionScore * 100}\r\n                        sx={{\r\n                            marginTop: '10px',\r\n                            height: '10px',\r\n                            '& .MuiLinearProgress-bar': {\r\n                                backgroundColor: color,\r\n                            },\r\n                        }}\r\n                    />\r\n                </Box>\r\n            )}\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default EmotionAnalyzer;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}